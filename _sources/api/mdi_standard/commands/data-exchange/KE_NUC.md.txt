(KE_NUC-target)=
# KE_NUC
Receive nuclear kinetic energy.



## <KE_NUC

Receive nuclear kinetic energy.

**Datatype:** `MDI_DOUBLE`  
**Quantity**: `1`  

 If the engine is at the @DEFAULT node, it calculates and sends the total kinetic energy of all nuclei in its system to the driver.  If the engine has previously calculated the energy of the system, and no intervening commands from the driver could have changed the energy,  the engine is permitted to send the previously calculated energy instead of recalculating it.
If the engine is not at the @DEFAULT node, it sends its most recently calculated nuclear kinetic energy to the driver.


### Examples


::::{tab-set}

:::{tab-item} Python
:sync: python

```python
import mdi

# connect to the engine
mdi_engine = mdi.MDI_Accept_Communicator()

# receive the nuclear kinetic energy from the engine
mdi.MDI_Send_Command("<KE_NUC", mdi_engine)
ke_nuc = mdi.MDI_Recv(1, mdi.MDI_DOUBLE, mdi_engine)

```
:::

:::{tab-item} C++
:sync: cpp

```cpp
#include "mdi.h"

// connect to the engine
MDI_Comm mdi_engine = MDI_Accept_Communicator();

// create a buffer to hold the nuclear kinetic energy
double ke_nuc;

// receive the nuclear kinetic energy from the engine
MDI_Send_Command("<KE_NUC", mdi_engine);
MDI_Recv(&ke_nuc, 1, MDI_DOUBLE, mdi_engine);

```
:::

::::